# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 1 Check main
      uses: actions/checkout@v3
      with:
       fetch-depth: 0   
    
    - name: 2 Set up JDK 16
      uses: actions/setup-java@v3
      with:
        java-version: '16'
        distribution: 'corretto'
        cache: maven
        
    - name: 3 Build with Maven
      run: mvn -B package --file pom.xml 
      
    - name: 4 Run Unit Tests
      run: mvn -B test --file pom.xml 
      
    - name: 4.5 Unit Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails test
      with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
      
    - name: 5 copy jar files
      run: mkdir staging && cp target/*.jar staging   
      
    - name: 6 set up a cache for maven
      uses: actions/cache@v2
      with:
         path: ~/.m2
         key: ${{runner.os}}-m2-${{hashFiles('**/pom.xml')}}
         restore-keys: ${{runner.os}}-m2
    - name: 6.5 Create Versions
      id: version
      uses: PaulHatch/semantic-version@v4.0.2
      with:
          tag_prefix: "v"
          major_pattern: "maj"
          minor_pattern: "min"
          format: "${major}.${minor}.${patch}"
          namespace: develop
          change_path: "."
          short_tags: false
          bump_each_commit: false
         
    - name: 7 Create Artifacts
      uses: actions/upload-artifact@v2
      with:
         name: ${{ steps.version.outputs.version_tag }}
         path: staging
 
    - name:  8 Create Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.version.outputs.version_tag }}
          prerelease: false
          title: ${{ steps.version.outputs.version_tag }}
          files: |
              staging/*.jar
            
            
            
        
